
image: Visual Studio 2015

environment:
  matrix:
    - PlatformToolset: v141
      configuration: Release
      platform: x86
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017



init:
- ps: |
    if ("$env:PLATFORM" -eq "x64") {
      $env:pf = "$env:ProgramFiles"
      $env:x64 = "-x64"
    } else {
      $env:pf = "${env:ProgramFiles(x86)}"
    }
    $env:exe = "postgresql-$env:pg-windows$env:x64.exe"
    [Environment]::SetEnvironmentVariable("exe", $env:exe, "Machine")

install:
#   #
#   - if %PLATFORM%==x64 (set BIT=64) else set BIT=32
#   - set betterperlurl=https://strawberryperl.com/download/5.32.1.1/strawberry-perl-5.32.1.1-%BIT%bit-portable.zip
#   - set betterperl=strawberry%BIT%
#   - if not exist %betterperl%.zip curl -o %betterperl%.zip %betterperlurl%
#   - 7z x %betterperl%.zip -oc:\%betterperl%
#   - set Path=c:\%betterperl%\perl\bin;%Path%
#   - which perl
#   - set Path=%Path%;c:\%betterperl%\c\bin
#   #




# x64 - sucessful creation
# C:\Program Files\PostgreSQL\REL_10_0
#
# x86 - try . . .
#
# Appveyor build server environment variables
#
# ProgramFiles=C:\Program Files
# ProgramFiles(x86)=C:\Program Files (x86)
#
#
# - ps:  New-Item -Path "%pgroot%" -ItemType Directory -Force
#
# - set pgversion=REL_10_0
#
# - set PLATFORM=x64
# - if %PLATFORM%==x64 ( set pf=%ProgramFiles%&& set x64=-x64) else set pf=%ProgramFiles(x86)%
# - set pgroot=%pf%\PostgreSQL\%pgversion%
# - echo  "%pgroot%"
# - mkdir "%pgroot%"
# - dir   "%pgroot%

#
# - set PLATFORM=x86
# - if %PLATFORM%==x64 ( set pf=%ProgramFiles%&& set x64=-x64) else set pf=%ProgramFiles(x86)%
# - set pgroot=%pf%\PostgreSQL\%pgversion%
# - echo  "%pgroot%"
# - mkdir "%pgroot%"
# - dir   "%pgroot%
#

build_script:
#   - cl /?
#   - set
#   - # bash -login -c "which cl 2>/dev/null"
#   - set Path=%VCToolsInstallDir%\bin\Host%PLATFORM%\%PLATFORM%;%Path%
#   - set
#   - cl /?
#   - cd %VSSDK140Install%
#   - tree
# - bash --login -c "echo "$(cygpath "${pf}")" "
- bash --login -c "find "$(cygpath "${pf}")" -name '*.exe' -type f 2>/dev/null"

  # VsDevCmd.bat
  # VsDevCmd -arch=amd64
  # VsDevCmd -arch=x86 (default)
  # set PATH=C:\Program Files\Git\bin;%PATH%
  # bash
  # find '/c/Program Files (x86)' -name 'VsDevCmd.bat' -type f
  # echo $(cygpath -w "NIXPATH/VsDevCmd.bat")
  # which cl
  # no help (in yaml enclosed in outside single quotes)
  # "C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat" -arch=x86
  # VsDevCmd.bat is new with Visual Studio 2017
  # and replaces vsvars32.bat that came with Visual Studio 2015 and earlier
  # https://renenyffenegger.ch/notes/Windows/dirs/Program-Files-x86/Microsoft-Visual-Studio/version/edition/Common7/Tools/VsDevCmd_bat

#   - # bash -login -c "find /c -name '*cl.exe'       -print 2>/dev/null"
#   - # bash -login -c "find /c -name '*vcvars64.bat' -print 2>/dev/null"
#   - dir "C:\Program Files (x86)"
#   - dir "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin"
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\cl" /?'
#   - # cd "C:\Program Files (x86)"
#   - # tree
#   - dir "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC"
#   - bash -login -c "find '/c/Program Files (x86)/Microsoft Visual Studio 14.0' -name 'cl.exe' -type f"
#   - bash -login -c "find '/c/Program Files (x86)/Microsoft Visual Studio 14.0' -name 'VsDevCmd.bat' -type f"
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\cl.exe" /?'
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd\cl.exe" /?'
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64_x86\cl.exe" /?'
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\x86_amd64\cl.exe" /?'
#   #
#   - '"C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\Tools\VsDevCmd.bat" -arch=x86'
#   - cl /?

# DIES NOT FOUND - which cl
# - set
# - dir "C:\Program Files\PostgreSQL" || date /t
# - dir "C:\Program Files (x86)\PostgreSQL" || date /t
# - dir "C:\Program Files(x86)\PostgreSQL" || date /t
# - dir "C:\ProgramFiles\PostgreSQL" || date /t
# - dir "C:\ProgramFiles (x86)\PostgreSQL" || date /t
# - dir "C:\ProgramFiles(x86)\PostgreSQL" || date /t

# - if "1"=="1" (
#     set alpha=true &
#     set beta=false &
#     set beta2=false &
#     if "%beta%"=="false" (
#         set gamma=false &
#         set delta=true
#       )
#   ) else (
#     set alpha=false &
#     set beta=true
#   )
# - echo %alpha%
# - echo %beta%
# - echo %beta2%
# - echo %gamma%
# - echo %delta%

# - if "1"=="1" (
#     set alpha=true
#     set beta=false
#   )
#   echo %alpha%
#   echo %beta%

